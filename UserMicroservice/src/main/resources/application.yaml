server:
  port: 8979
  
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: springboot
    password: harsh1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-69203606.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oabd5lttejvOufm25d7
            client-secret: hcSbbFmvbMS6-zc8ltj5wL_0NSMu2qE6rNP1Su7_mYDpL4AmvVEdhAIBR5ijwNZ1
            
        provider:
          okta:
            issuer-uri: https://dev-69203606.okta.com/oauth2/default
#  mvc:
#    view:
#      prefix: /views
#      suffix: .jsp
    
  jpa:
    hibernate:
      ddl-auto: update
    generate-ddl: true
    show-sql: true
    
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  application:
    name: USER-SERVICE
    
#  config:
#    import: configserver: http://localhost:8982

# Circuit Breaker Configuration - open
management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 6s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: count-based
  
  retry:
    instances:
      ratingHotelRetry:
        max-attempts: 3
        wait-duration: 5s
        
  ratelimiter:
    instances:
      ratingHotelLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0    
      
# Circuit Breaker Configuration - close

#okta authentication OPEN

okta:
  oauth2:
    issuer: https://dev-69203606.okta.com/oauth2/default
    audience: api://default

#okta authentication END
  
  
# Eureka Configuration     
eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8980/eureka
      
        

        
    
        
  